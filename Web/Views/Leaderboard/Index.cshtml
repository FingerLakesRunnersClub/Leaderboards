@using FLRC.Leaderboards.Core.Leaders
@model LeaderboardViewModel

@functions
{
    string style(LeaderboardResultType type) => Model.LeaderboardResultType == type
        ? "secondary"
        : "light";
}

<h2>Overall Leaders</h2>
<div class="card card-highlighted">
    <div class="card-body">
        <div class="row justify-content-center">
            @foreach (var table in Model.OverallResults)
            {
                var width = table.Category != null ? "col-lg-6" : "col-lg-4";
                <div class="col-12 @width mb-3">
                    @await Html.PartialAsync("Table", table)
                </div>
            }
        </div>
    </div>
</div>

<h2 class="mt-3">Course Leaders</h2>
<div class="btn-group mb-2">
    @foreach (var type in Enum.GetValues<LeaderboardResultType>())
    {
        <a class="btn btn-sm btn-@style(type)" href="/Leaderboard/Index/@type">@type</a>
    }
</div>
@foreach (var results in Model.CourseResults)
{
    <div class="card card-highlighted mb-3">
    <div class="card-header">
        @await Html.PartialAsync("CourseIcon", @results.Key)
        @results.Key.Race.Name
        <a style="margin: 2px 5px 0px;" class="float-right" href="@results.Key.Race.URL" title="Course Info" target="_blank">
            <i aria-hidden="true" class="fas fa-info-circle"></i>
        </a>
        <span class="float-right">
            <span class="badge badge-pill badge-secondary">@results.Key.Race.Type</span>
            <span class="badge badge-pill badge-warning">@results.Key.Distance.Display</span>
        </span>
    </div>
    <div class="card-body">
        <div class="row">
            @foreach (var table in results.Value)
                {
                    var margin = table == results.Value.Last() ? "mb-0" : "mb-3 mb-lg-0";
                    <div class="col-12 col-lg-4 @margin">
                        @await Html.PartialAsync("Table", table)
                    </div>
                }
            </div>
        </div>
    </div>
}