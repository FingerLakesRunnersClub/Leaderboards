@using FLRC.Leaderboards.Core
@model ViewModel

<header>
	<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white box-shadow mb-4">
		<div class="container">
			<a class="navbar-brand" href="/">
				<img class="logo" src="~/logo.png" alt="FLRC logo"/>
				<h1 class="sr-only">@Model.Config.App</h1>
			</a>
			<ul class="primary-nav nav justify-content-center">
				<li class="nav-item">
					<a class="nav-link text-dark" href="/">Home</a>
				</li>
				<li class="nav-item">
					<a class="nav-link text-dark dropdown-toggle" href="#" onclick="return toggleDropdown(this, event);">
						Reports
					</a>
					<ul id="reports" class="dropdown-menu" onclick="event.stopPropagation();">
						@if (Model.Config.Features.MultiAttempt)
						{
							<li class="dropdown-item">
								<a href="/Log">Activity Log</a>
							</li>
						}
						@if (Model.Config.Awards.Any())
						{
							<li class="dropdown-item">
								<a href="/Awards">Awards</a>
							</li>
						}

						@if (Model.Config.Features.MultiAttemptCompetitions)
						{
							<li class="dropdown-item">
								<a href="/Completed">Completions</a>
							</li>
						}
						<li class="dropdown-item">
							<a href="/Athletes">Participants</a>
						</li>
						<li class="dropdown-item">
							<a href="/Statistics">Statistics</a>
						</li>
						@if (Model.Config.SeriesTitle is not null)
						{
							<li class="dropdown-item">
								<a href="/Series">@Model.Config.SeriesTitle</a>
							</li>
						}
					</ul>
				</li>
				<li class="nav-item">
					<a class="nav-link text-dark dropdown-toggle" href="#" onclick="return toggleDropdown(this, event);">
						@(Model.Config.CourseLabel)s
					</a>
					<ul id="races" class="dropdown-menu" onclick="event.stopPropagation();">
						@foreach (var course in Model.Config.CourseNames)
						{
							<li class="dropdown-item">
								<a href="/Course/@course.Key/Fastest">@course.Value</a>
							</li>
						}
					</ul>
				</li>
				<li class="nav-item">
					<a class="nav-link text-dark dropdown-toggle" href="#" onclick="return toggleDropdown(this, event);">
						About
					</a>
					<ul id="about" class="dropdown-menu" onclick="event.stopPropagation();">
						@foreach (var link in Model.Config.Links)
						{
							<li class="dropdown-item">
								<a href="@link.Value">@link.Key</a>
							</li>
						}
					</ul>
				</li>
			</ul>
		</div>
	</nav>
</header>

<script>
    function hideDropdowns() {
        document.querySelectorAll('.dropdown-menu').forEach(e => e.style = '');
    }

    function toggleDropdown(element, event) {
        const menu = element.parentElement.querySelector('.dropdown-menu');
        const show = menu.style.length === 0;
        hideDropdowns();
        menu.style = show ? 'display: block;' : '';
        event.stopPropagation();
        return false;
    }

    document.body.onclick = () => hideDropdowns();
</script>