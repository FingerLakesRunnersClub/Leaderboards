@using FLRC.Leaderboards.Core.Metrics
@using FLRC.Leaderboards.Core.Overall
@using System.Text.Json
@model OverallResultsViewModel<AgeGrade>

<h2>Overall Leaders</h2>
<div class="card card-highlighted">
    <div class="card-body">
        @await Html.PartialAsync("OverallFilter")

        <script>
            const fields = [
                { name: 'Rank', center: true, value: r => r.Rank.Value },
                { name: 'Name', value: r => r.Result.Athlete.Name, link: r => `/Athlete/Index/${r.Result.Athlete.ID}` },
                { name: 'Age', center: true, value: r => r.Result.Athlete.Age },
                { name: 'Category', center: true, value: r => r.Result.Athlete.Category?.Display, sort: r => r.Result.Athlete.Category?.Value ?? 'X'.charCodeAt(0) },
                { name: 'Courses Run', center: true, value: r => r.Count, sort: r => -r.Count },
                { name: 'Average Age Grade', center: true, value: r => r.AgeGrade.Display, sort: r => r.AgeGrade.Value, descending: true }
            ];

            const rows = @Html.Raw(JsonSerializer.Serialize(Model.RankedResults));
        </script>

        @await Html.PartialAsync("DataTable")

    </div>
</div>