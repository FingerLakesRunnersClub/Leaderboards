@using FLRC.Leaderboards.Core.Overall
@using FLRC.Leaderboards.Core.Teams
@using System.Text.Json
@model OverallResultsViewModel<TeamResults>

@await Html.PartialAsync("MonthFilter")

<h2>Overall Leaders</h2>
<div class="card card-highlighted">
    <div class="card-body">
        @await Html.PartialAsync("OverallFilter")

        <script>
            const fields = [
                { name: 'Rank', center: true, value: r => r.Rank.Value },
                { name: 'Team', center: true, value: r => r.Value.Team.Display, sort: r => r.Value.Team.Value, link: r => `/Team/Index/${r.Value.Team.Value}`, show: @Model.Config.Features.AgeGroupTeams.ToString().ToLower() },
                { name: 'Age Grade Points', center: true, value: r => r.Value.AgeGradePoints },
                { name: 'Most Runs Points', center: true, value: r => r.Value.MostRunsPoints },
                { name: 'Total Points', center: true, value: r => r.Value.TotalPoints },
            ];

            const rows = @Html.Raw(JsonSerializer.Serialize(Model.RankedResults));
        </script>

        @await Html.PartialAsync("DataTable")

    </div>
</div>
