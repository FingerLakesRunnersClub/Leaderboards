@using FLRC.Leaderboards.Core.Results
@using System.Text.Json
@model AthleteCourseResultsViewModel

@await Html.PartialAsync("AthleteHeader", Model.Athlete)

<div class="card-highlighted card mb-3">
    <div class="card-header">
        All Runs for Course
    </div>
    <div class="card-body">
        @await Html.PartialAsync("CourseInfo", Model)

        <script>
            const fields = [
                { name: 'Rank', center: true, value: r => r.Rank.Value },
                { name: 'Date', center: true, value: r => r.Result.StartTime.Display, sort: r => r.Result.StartTime.Value },
                { name: 'Time', center: true, value: r => r.Result.Duration.Display, sort: r => r.Result.Duration.Value },
                { name: 'Age Grade', center: true, value: r => r.AgeGrade.Display, sort: r => r.AgeGrade.Value, descending: true },
                { name: 'Community', center: true, value: r => communityEmoji(r.Result.CommunityPoints), sort: r => Object.values(r.Result.CommunityPoints).filter().length, descending: true, show: @Model.Config.Features.CommunityPoints.ToString().ToLower() }
            ];

            const rows = @Html.Raw(JsonSerializer.Serialize(Model.RankedResults));
        </script>

        @await Html.PartialAsync("DataTable")

    </div>
</div>