@using FLRC.Leaderboards.Core.Athletes
@using FLRC.Leaderboards.Core.Races
@using FLRC.Leaderboards.Core.Results
@model CourseResultsViewModel

@functions
{
	string style(ResultType type) => Model.ResultType.Value == type
		? "secondary"
		: "light";

	string style(Distance distance) => Model.Course.Distance == distance
		? "secondary"
		: "light";

	string style(Category category) => Model.Filter.Category == null && category == null || Model.Filter.Category == category
		? "secondary"
		: "light";
}

<form class="float-left">
	<section class="mb-3 mt-2">
		<div class="btn-group d-flex flex-wrap">
			@if (Model.Config.Features.MultiAttempt)
			{
				foreach (var type in Enum.GetValues<ResultType>().Select(t => new FormattedResultType(t)))
				{
					<a class="btn btn-sm btn-@style(type.Value)" href="/Course/@Model.Course.ID/@Model.Course.ShortName/@type.Value/@Model.Filter.Category?.Value?ag=@Model.Filter.AgeGroup?.Value">@type.Display</a>
				}
			}
			else
			{
				foreach (var course in Model.Course.Race.Courses)
				{
					<a class="btn btn-sm btn-@style(course.Distance)" href="/Course/@course.ID/@course.ShortName/Fastest/@Model.Filter.Category?.Value?ag=@Model.Filter.AgeGroup?.Value">@course.Distance.Display</a>
				}
			}
		</div>
	</section>

	@if (Model.ResultType.Value is ResultType.Fastest or ResultType.BestAverage)
	{
		var resultsURL = $"/Course/{Model.Course.ID}/{Model.Course.ShortName}/{Model.ResultType.Value}".Replace("//", "/");
		var query = $"?ag={Model.Filter.AgeGroup?.Value}";
		<section class="mb-4">
			<div class="btn-group">
				<a class="btn btn-sm btn-@style((Category)null)" href="@resultsURL@query">All</a>
				<a class="btn btn-sm btn-@style(Category.F)" href="@resultsURL/F@(query)">F</a>
				<a class="btn btn-sm btn-@style(Category.M)" href="@resultsURL/M@(query)">M</a>
			</div>

			@if (Model.ResultType.Value == ResultType.Fastest)
			{
				<div class="float-right ml-5">
					<select class="form-control form-control-sm" onchange="goToAgeGroup(this.value)">
						<option value="">All Age Groups</option>
						@foreach (var team in Athlete.Teams)
						{
							<option value="@team.Key" @(Model.Filter.AgeGroup == team.Value ? "selected" : string.Empty)>
								@team.Value.Display
							</option>
						}
					</select>
				</div>
			}
		</section>
	}
</form>
<div class="clearfix"></div>

<script>
    function goToAgeGroup(ag) {
        location.href = ag ? `?ag=${ag}` : '?';
    }
</script>