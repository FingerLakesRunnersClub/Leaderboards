@using FLRC.Leaderboards.Core.Results
@using System.Text.Json
@model CourseResultsViewModel<ushort>

<h2>Course Results</h2>
<div class="card card-highlighted">
    <div class="card-body">
        @await Html.PartialAsync("CourseInfo", Model)
        @await Html.PartialAsync("ResultFilter")

        <script>
            const fields = [
                { name: 'Rank', center: true, value: r => r.Rank.Value },
                { name: 'Name', value: r => r.Result.Athlete.Name, link: r => `/Athlete/Index/${r.Result.Athlete.ID}` },
                { name: 'Age', center: true, value: r => r.Result.Athlete.Age },
                { name: 'Category', center: true, value: r => r.Result.Athlete.Category?.Display, sort: r => r.Result.Athlete.Category?.Value ?? 'X'.charCodeAt(0), show: @((Model.Filter.Category == null).ToString().ToLower()) },
                { name: 'Team', center: true, value: r => r.Result.Athlete.Team.Display, sort: r => r.Result.Athlete.Team.Value, link: r => `/Team/Index/${r.Result.Athlete.Team.Value}`, show: @Model.Config.Features.AgeGroupTeams.ToString().ToLower() },
                { name: '# of Runs', center: true, value: r => r.Count }
            ];

            const rows = @Html.Raw(JsonSerializer.Serialize(Model.RankedResults));
        </script>

        @await Html.PartialAsync("DataTable")

    </div>
</div>