@using System.Text.Json
@using FLRC.Leaderboards.Core.Series;
@model SeriesViewModel

@functions
{
	string style(Series series) => Model.Series == series
		? "secondary"
		: "light";
}

<h2>@Model.Config.SeriesTitle</h2>

<section class="mb-3">
	<div class="btn-group">
		@foreach (var series in Model.Config.Series)
		{
			var url = $"/Series/Index/{series.ID}";
			<a class="btn btn-sm btn-@style(series)" href="@url">@series.ID</a>
		}
	</div>
</section>

<div class="card card-highlighted">
	<div class="card-body">
		<h3>@Model.Title</h3>

		<script>
			const fields = [
				{ name: 'Rank', center: true, value: r => r.Rank.Value },
				{ name: 'Name', value: r => r.Value.Athlete.Name, link: r => `/Athlete/Index/${r.Value.Athlete.ID}` },
				{ name: 'Age', center: true, value: r => r.Value.Athlete.Age || '' },
				{ name: 'Category', center: true, value: r => r.Value.Athlete.Category?.Display, sort: r => r.Value.Athlete.Category?.Value ?? 'X'.charCodeAt(0) },
				{ name: 'Start Date', center: true, value: r => r.Value.StartTime.Display, sort: r => r.Value.StartTime.Value },
				{ name: 'Finish Date', center: true, value: r => r.Value.FinishTime.Display, sort: r => r.Value.FinishTime.Value },
				{ name: 'Total Time', center: true, value: r => r.Value.TotalTime.Display, sort: r => r.Value.TotalTime.Value },
				{ name: 'Running', center: true, value: r => r.Value.RunningTime.Display, sort: r => r.Value.RunningTime.Value },
				{ name: 'Age Grade', center: true, value: r => r.AgeGrade?.Display, sort: r => r.AgeGrade?.Value, descending: true }
			];

			const rows = @Html.Raw(JsonSerializer.Serialize(Model.Results));
		</script>

		@await Html.PartialAsync("DataTable")
	</div>
</div>