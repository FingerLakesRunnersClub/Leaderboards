@using FLRC.Leaderboards.Core
@using System.Text.Json
@model CourseResultsViewModel<Time>

<h2>Course Results</h2>
<div class="card card-highlighted">
    <div class="card-body">
        @await Html.PartialAsync("CourseInfo", Model.Course)
        @await Html.PartialAsync("ResultFilter")

        <script>
            const fields = [
                { name: 'Rank', center: true, value: r => r.Rank.Value },
                { name: 'Name', value: r => r.Result.Athlete.Name, link: r => `/Athlete/Index/${r.Result.Athlete.ID}` },
                { name: 'Age', center: true, value: r => r.Result.AgeOnDayOfRun },
                { name: 'Category', center: true, value: r => r.Result.Athlete.Category?.Display, sort: r => r.Result.Athlete.Category?.Value ?? 'X'.charCodeAt(0), show: @((Model.Category == null).ToString().ToLower()) },
                { name: 'Team', center: true, value: r => r.Result.Athlete.Team.Display, link: r => `/Team/Index/${r.Team.Value}`, sort: r => r.Result.Athlete.Team.Value, link: r => `/Team/Index/${r.Result.Athlete.Team.Value}` },
                { name: 'Time', center: true, value: r => r.Result.Duration.Display, sort: r => r.Result.Duration.Value.TotalSeconds },
                { name: 'Age Grade', center: true, value: r => r.AgeGrade.Display, sort: r => r.AgeGrade.Value, descending: true },
                { name: 'Behind Leader', center: true, value: r => `+ ${r.BehindLeader.Display}`, sort: r => r.BehindLeader.Value.TotalSeconds },
                { name: 'Points', center: true, value: r => r.Points.Display, sort: r => r.Points.Value, descending: true, show: @((Model.Category != null && ViewBag.AgeGroup == null).ToString().ToLower()) }
            ];

            const rows = @Html.Raw(JsonSerializer.Serialize(Model.RankedResults));
        </script>

        @await Html.PartialAsync("DataTable")

    </div>
</div>